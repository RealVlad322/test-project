name: CI/CD Pipeline for Backend

on:
  push:
    branches:
      - main  # Запускать pipeline на каждый push в ветку main
  pull_request:
    branches:
      - main  # Запускать pipeline на каждый pull request в ветку main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }} # Docker Hub username
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} # Docker Hub access token

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest # Замените на имя вашего репозитория на Docker Hub

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} # Приватный ключ для SSH, добавленный в Secrets
        SERVER_USER: root # Имя пользователя на сервере
        SERVER_HOST: 185.189.167.8 # IP или домен сервера
        DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }} # Docker Hub username
        DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} # Docker Hub access token
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        # Подключаемся к серверу и запускаем Docker контейнер
        ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST << 'EOF'
          # Входим в Docker Hub
          echo "$DOCKER_HUB_ACCESS_TOKEN" | docker login --username $DOCKER_HUB_USERNAME --password-stdin

          # Останавливаем и удаляем старый контейнер
          docker stop backend || true && docker rm backend || true

          # Запускаем новый контейнер
          docker run -d --name backend -p 3000:3000 $DOCKER_HUB_USERNAME/backend:latest
        EOF
